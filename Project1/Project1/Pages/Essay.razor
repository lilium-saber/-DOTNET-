@page "/essay/{essayname}"
@inject IVersionProvider VersionProvider
@using Blazorise
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject Datause datause
@inject IHttpClientFactory HttpClientFactory
@inject IJSRuntime JSRuntime
@inject DataShare dataShare

<PageTitle>文章界面</PageTitle>

<Layout onclick="">
    <LayoutHeader Fixed>
        <Heading Size="HeadingSize.Is2">博客网站</Heading>
        <Div>
            @if (@hasUser)
            {
                <Heading Size="HeadingSize.Is5">欢迎您： @userName</Heading>
                <Button Color="Color.Primary" Clicked="CloseUser">注销</Button>
            }
            else
            {
                <Button Color="Color.Primary" Clicked="@ShowSignIn">登入</Button>
                <Button Color="Color.Success" Clicked="@ShowSignUp">注册</Button>
                <Modal @ref="modalRef" onclick="@setAlertIn">
                    <ModalContent Centered>
                     <ModalHeader>
                         <ModalTitle>登入模块</ModalTitle>
                         <CloseButton />
                     </ModalHeader>
                     <ModalBody>
                         <Alert @ref="signInAlert" Color="Color.Warning" @bind-Visible="@seeAlertIn">
                             <AlertMessage>
                                 @msgAlertIn
                                </AlertMessage>
                            </Alert>
                            <Field>
                                <FieldLabel>用户名</FieldLabel>
                                <TextEdit Placeholder="请输入用户名" @bind-Text="@userName" />
                            </Field>
                            <Field>
                                <FieldLabel>密码</FieldLabel>
                                <TextEdit Placeholder="请输入密码" @bind-Text="@paw" />
                            </Field>
                        </ModalBody>
                        <ModalFooter>
                            <Button Color="Color.Secondary" Clicked="@HideModal">关闭</Button>
                            <Button Color="Color.Primary" Clicked="@SignIn">登入</Button>
                        </ModalFooter>
                    </ModalContent>
                </Modal>

                <Modal @ref="signUp" onclick="@setAlertUp">
                    <ModalContent Centered>
                     <ModalHeader>
                         <ModalTitle>注册模块</ModalTitle>
                         <CloseButton />
                     </ModalHeader>
                     <ModalBody>
                         <Alert @ref="signInAlert" Color="Color.Warning" @bind-Visible="@seeAlertUp">
                             <AlertMessage>
                                 @msgAlertUp
                                </AlertMessage>
                            </Alert>
                            <Field>
                                <FieldLabel>用户名</FieldLabel>
                                <TextEdit Placeholder="请输入用户名" @bind-Text="@createName" />
                            </Field>
                            <Field>
                                <FieldLabel>密码</FieldLabel>
                                <TextEdit Placeholder="请输入密码" @bind-Text="@createPW" />
                            </Field>
                            <Field>
                                <FieldLabel>确认密码</FieldLabel>
                                <TextEdit Placeholder="请再次输入密码" @bind-Text="@createSPW" />
                            </Field>

                        </ModalBody>
                        <ModalFooter>
                            <Button Color="Color.Secondary" Clicked="@HideSignUp">关闭</Button>
                            <Button Color="Color.Primary" Clicked="@CreateUser">注册</Button>
                        </ModalFooter>
                    </ModalContent>
                </Modal>
            }
        </Div>

    </LayoutHeader>

    <Divider DividerType="DividerType.Dashed" />

    <Layout Sider>
        <LayoutSider>
            <LayoutSiderContent>
                <Card>
                    <CardBody>
                        <NavLink href="/">
                            <Text TextSize="TextSize.Large">返回首页</Text>
                        </NavLink>
                    </CardBody>
                </Card>
                <Card>
                    <CardBody>
                        <CardTitle Size="4">
                            我也来写
                        </CardTitle>
                        @if (hasUser)
                        {
                            <NavLink href="/writeessay">
                                <Button Color="Color.Primary" Margin="Margin.Is2.FromTop" To="writeessay">
                                    来来来<Icon Name="IconName.ArrowRight" />
                                </Button>
                            </NavLink>
                        }
                        else
                        {
                            <CardText>
                                先登入再来吧！！！
                            </CardText>
                        }
                    </CardBody>
                </Card>
                <Card>
                    <CardBody>
                        <CardTitle Size="4">
                            推荐文章
                        </CardTitle>
                        <CardText>
                            <Link To="#">
                            文章
                            </Link>
                        </CardText>
                        <Button Color="Color.Primary" Margin="Margin.Is2.FromTop">
                            查看更多<Icon Name="IconName.ArrowRight" />
                        </Button>
                    </CardBody>
                </Card>
                <Card>
                    <CardBody>
                        <CardTitle Size="4">
                            友情链接
                        </CardTitle>
                        <CardText>
                            <Link To="#">
                            链接
                            </Link>
                        </CardText>
                    </CardBody>
                </Card>
                <Card>
                    <CardBody>
                        <CardTitle Size="4">
                            关于我们
                        </CardTitle>
                        <CardText>
                            <Link To="#">
                            给我们留言
                            </Link>
                        </CardText>
                    </CardBody>
                </Card>

            </LayoutSiderContent>
        </LayoutSider>
        <Layout>
            <LayoutContent>
                <Breadcrumb>
                    <BreadcrumbItem>
                        <NavLink href="/">
                            首页
                        </NavLink>
                    </BreadcrumbItem>
                    <BreadcrumbItem>
                        <Link To="#">文章</Link>
                    </BreadcrumbItem>
                </Breadcrumb>
                <ListGroup>
                    <ListGroupItem>
                        <Text TextSize="TextSize.Large">文章标题：@essayname</Text>
                    </ListGroupItem>
                    <ListGroupItem>
                        <Text TextSize="TextSize.Default">正文：@text</Text>
                    </ListGroupItem>
                    <ListGroupItem>
                        <Fields>
                            <Field>
                                    <TextEdit Placeholder="可以在这写评论!" @bind-Text="@pl"></TextEdit>
                            </Field>
                            <Field>
                                    <Button Color="Color.Primary" Clicked="@PutPL">发布评论</Button>
                            </Field>
                        </Fields>
                        <Fields>
                            <Field>
                                @if(hasPL)
                                {
                                    <Button Color="Color.Success" Clicked="@ShowPL">查看评论</Button>
                                }
                                else
                                {
                                    <Button Color="Color.Danger" Disabled>暂无评论</Button>
                                }
                            </Field>
                            <Field>
                                <NavLink href="/">
                                    <Button Color="Color.Warning">返回首页</Button>
                                </NavLink>
                            </Field>
                        </Fields>
                        <Modal @ref="seepl">
                            <ModalContent Centered>
                                <ModalHeader>所有评论</ModalHeader>
                                <ModalBody>
                                    @if(hasPL)
                                    {
                                        @foreach(var item in mpl)
                                        {
                                            @if(item.EssayNub == essayname)
                                            {
                                                <Card>
                                                    <CardBody>
                                                        <CardTitle>用户：@item.UserName</CardTitle>
                                                        <CardText>@item.PingLunText</CardText>
                                                    </CardBody>
                                                </Card>                                                
                                            }
                                        }
                                    }
                                </ModalBody>
                                <ModalFooter>
                                    <Button Color="Color.Primary" Clicked="@HidePL">关闭</Button>
                                </ModalFooter>
                            </ModalContent>
                        </Modal>
                    </ListGroupItem>
                </ListGroup>
            </LayoutContent>
        </Layout>
    </Layout>
</Layout>


@code {
    private Modal modalRef;
    private Modal signUp;
    private Modal seepl;

    private Alert signInAlert;

    private string userName = "";
    private string paw = "";
    private string createName = "";
    private string createPW = "";
    private string createSPW = "";
    private string msgAlertIn = "用户名或密码错误错误！！！";
    private string msgAlertUp = "";
    private string texttitle = "";
    private string text = "";
    private string pl = "";

    private bool hasUser { get; set; }
    private bool hasPL { get; set; }
    private bool seeAlertIn = false;
    private bool seeAlertUp = false;

    [Parameter]
    public string essayname { get; set;}

    private HttpClient Http;

    private ICollection<Project1.Modal.PingLun> mpl { get; set; } = null;

    private void setAlertIn()
    {
        this.seeAlertIn = false;
    }

    private void setAlertUp()
    {
        this.seeAlertUp = false;
    }

    private Task ShowPL()
    {
        return this.seepl.Show();
    }

    private Task HidePL()
    {
        return this.seepl.Hide();
    }

    private async Task SignIn()
    {
        if (userName == "" && paw == "")
        {
            await JSRuntime.InvokeVoidAsync("alert", "用户名或密码未输入");
        }
        else
        {
            bool results = await datause.CheckUser(userName, paw);

            if (results)
            {
                await JSRuntime.InvokeVoidAsync("setCookie", "UserHas", "true", 1);
                await JSRuntime.InvokeVoidAsync("alert", "你好");
                hasUser = true;
                dataShare._hasUserSignIn = true;
                dataShare._userName = userName;

                /*
                var cookieop = new CookieOptions()
                    {
                    Expires = DateTime.Now.AddHours(1),
                    IsEssential = true
                };
                httpContextAccessor.HttpContext.Response.Cookies.Append("UserHas", "true", cookieop);
                */


                await HideModal();
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "用户名或密码错误");
            }
        }
    }

    private async Task getUserHas()
    {
        var has = await ProtectedSessionStore.GetAsync<bool>("UserHas");
        var n = await ProtectedSessionStore.GetAsync<string>("name");
        hasUser = has.Success ? has.Value : false;
        userName = n.Success ? n.Value : "";
    }

    private async Task PutPL()
    {
        if(pl == "")
        {
            await JSRuntime.InvokeVoidAsync("alert", "评论不能为空");
        }
        else if(!hasUser)
        {
            await JSRuntime.InvokeVoidAsync("alert", "请先登入");
        }
        else
        {
            await datause.AddPL(userName, essayname, pl);
            await JSRuntime.InvokeVoidAsync("alert", "评论成功");
            mpl = await datause.SendPL(essayname);
            pl = "";
            hasPL = true;
        }
    }

    private async Task CloseUser()
    {
        hasUser = false;
        userName = "";
        paw = "";
        dataShare._hasUserSignIn = false;
        await JSRuntime.InvokeVoidAsync("deleteCookie", "UserHas");
    }

    private async Task CreateUser()
    {
        if (createPW != createSPW)
        {
            await JSRuntime.InvokeVoidAsync("alert", "两次密码不一致");
            createSPW = "";
        }
        else if (createName == "" && createPW == "")
        {
            await JSRuntime.InvokeVoidAsync("alert", "用户名或密码未输入");
        }
        else
        {
            //var result = await Http.GetAsync("api/Datause/CreateUser?name=" + createName + "&pw=" + createPW);
            await datause.CreateUser(createName, createPW);
            await JSRuntime.InvokeVoidAsync("alert", "注册成功");
            await HideSignUp();
        }
    }

    private Task ShowSignUp()
    {
        return signUp.Show();
    }

    private Task HideSignUp()
    {
        return signUp.Hide();
    }

    private Task ShowSignIn()
    {
        this.seeAlertIn = false;
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }

    protected override async Task OnInitializedAsync()
    {
        Http = HttpClientFactory.CreateClient("MyClient");
        string username = await JSRuntime.InvokeAsync<string>("getCookie", "username");
        bool hassignin = dataShare._hasUserSignIn;
        /*
        if(username != null)
    {
    hasUser = true;
    userName = username;
        }
        else
        {
        hasUser = false;
        userName = "";
    }
    */
        if (hassignin)
        {
            hasUser = true;
            userName = dataShare._userName;
        }
        else
        {
            hasUser = false;
            userName = "";
        }

        text = await datause.GetEssay(essayname);

        hasPL = await datause.GetCheckPL(essayname);
        if(hasPL)
        {
            mpl = await datause.SendPL(essayname);
        }
    }
}